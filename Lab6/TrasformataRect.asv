clear all, clf;
T = 1e-3 % tempo di campionamento
N = 1000 %numero di campioni
N1 = 11 %campioni in cui il segnale Ã¨ attivo
A = 2 % V ampiezza

t = (-N/2:N/2-1)*T %vettore dei tempi
T1 = N1*T %Calcola la durata del rettangolo in secondi.
x = A*(abs(t) < T1/2) %Definisce il segnale rettangolare centrato in 0:

subplot(2,2,1)
stem(t,x)
xlabel('t[s]')
ylabel('x(t) [V]')
axis([-3*T1, 3*T1, -0.1*A,1.1*A])

Fp = 1/T %frequenza di campionamento
F = Fp/N %risoluzione in frequenza del dft
f = (0:N-1)*F %vettore frequenza
X = T * fft(x) %trasformata di Fourier
subplot(2,2,2)
plot(f, real(X), 'r', f, imag(X), 'm')
xlabel('f[Hz]')
ylabel('X(f) [Vs]')
legend('Re X', 'Im X')
axis([0, 10, -0.025, 0.025])

subplot(2,2,2)
plot(f, abs(X), 'b', f, angle(X), 'g')
xlabel('f[Hz]')
ylabel('X(f) [Vs]')
legend('Re X', 'Im X')

df = 1 % Hz passo di campionamento
fa = 0:df:Fp %vettore frequenze
Xa = A*T*(exp(-i*2*pi*fa*T*(N1+1))-1) ./ (exp(-i*2*pi*fa*T)-1) %./ fa la divisione punto a punto, Calcola la DTFT analitica del tuo rettangolo finito (ampiezza A, durata T1 = N1*T) ai punti fa.
subplot(2,2,4)
plot(fa, real(Xa), 'r', fa, imag(Xa), 'm')
xlabel('f[Hz]')
ylabel('X(f) [Vs]')
legend('Re X', 'Im X')
